generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id           String         @id @default(cuid())
  email        String?        @unique
  name         String?
  phone        String?        @unique
  password     String?
  role         String?        @default("USER")
  favorites    Favorite[]
  Cart         Cart?
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @updatedAt @map("updated_at")
  RefreshToken RefreshToken[]

  @@map("users")
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@map("refresh_token")
}

model DefineProduct {
  id               String     @id @default(cuid())
  name             String
  art              String     @default(cuid())
  weight           Int
  price            Int
  type             String
  composition      String
  params           Json       @default("{}")
  color            Json       @default("{}")
  show             Boolean    @default(true)
  shortDescription String     @map("short_description")
  description      String
  count            Int        @default(10)
  categoryId       String     @map("category_id")
  category         Category   @relation(fields: [categoryId], references: [id])
  createdAt        DateTime   @default(now()) @map("created_at")
  updatedAt        DateTime   @updatedAt @map("updated_at")
  Favorite         Favorite[]
  CartItem         CartItem[]

  @@index([categoryId])
  @@map("define_products")
}

model Category {
  id            String          @id @default(cuid())
  name          String
  photo         String?
  DefineProduct DefineProduct[]

  @@map("categories")
}

model Filter {
  id   String  @id @default(cuid())
  name String  @unique
  show Boolean @default(true)

  @@map("filters")
}

model Favorite {
  id        String        @id @default(cuid())
  userId    String
  productId String
  createdAt DateTime      @default(now())
  user      User          @relation(fields: [userId], references: [id])
  product   DefineProduct @relation(fields: [productId], references: [id])

  @@index([userId])
  @@index([productId])
  @@map("favorites")
}

model Cart {
  id     String     @id @default(cuid())
  userId String     @unique
  items  CartItem[]
  user   User       @relation(fields: [userId], references: [id])

  @@map("carts")
}

model CartItem {
  id        String        @id @default(cuid())
  cartId    String
  productId String
  count     Int
  color     Json
  price     Int
  cart      Cart          @relation(fields: [cartId], references: [id])
  product   DefineProduct @relation(fields: [productId], references: [id])

  @@index([cartId])
  @@index([productId])
  @@map("cart_items")
}
